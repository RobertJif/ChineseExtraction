/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chineseextraction;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.io.File;
import java.io.IOException;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.opencv.core.Core;
import org.opencv.core.CvType;
import org.opencv.core.Mat;
import org.opencv.core.Point;
import org.opencv.core.Rect;
import org.opencv.core.Scalar;
import org.opencv.core.Size;
import org.opencv.videoio.*;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;

/**
 *
 * @author Robert
 */
public class BrowseImagesTesting extends javax.swing.JFrame {
String akhir = "";
               String akhirarti="";
    String namaawal;
    boolean webcam = false;
    String path;
    int ghores = 0;
    Mat terbelah2[] = new Mat[2];
    public void setghores(int ghores){
        this.ghores = ghores;
    }
    public int getgoresan(){
        return ghores;
    }
    public BrowseImagesTesting() {
        initComponents();
        jTextArea1.setEditable(false);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabelarti = new javax.swing.JLabel();
        jLabelhuruf = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setForeground(new java.awt.Color(50, 25, 55));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Gambar Mandarin");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setText("Browse Image");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Web Camera");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setText("Mulai");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Petunjuk Penggunaan", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 15))); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Melalui File Explorer\n1.Browse gambar huruf mandarin dari komputer\n  dengan memilih tombol Browse Image.\n  ( file .png, .jpg, atau .gif ) \n2.Pilih tombol Mulai.\n3.Huruf dapat dicopy ke clipboard dengan\n  memilih tombol copy pada bagian hasil.\n\n\nMelalui Webcam\n1.Capture foto huruf mandarin dengan\n  memilih tombol Web Camera.\n2.Pilih start untuk menyalakan webcam dan\n  capture untuk menangkap gambar.\n3.Pilih tombol Mulai.\n4.Huruf dapat dicopy ke clipboard dengan\n  memilih tombol copy pada bagian hasil.");
        jScrollPane1.setViewportView(jTextArea1);

        jLayeredPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jLayeredPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Hasil", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 15))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Huruf Mandarin");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Arti");

        jLabelarti.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelarti.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelarti.setText("...");

        jLabelhuruf.setFont(jLabelhuruf.getFont().deriveFont(jLabelhuruf.getFont().getSize()+1f));
        jLabelhuruf.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelhuruf.setText("...");
        jLabelhuruf.setName("huruf"); // NOI18N

        jButton4.setText("Copy");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Copy");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Nilai Korelasi");

        jLayeredPane2.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabelarti, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabelhuruf, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jButton4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jButton5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addGap(69, 69, 69))
                            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                                        .addComponent(jLabelhuruf, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jLabel4)
                                                .addGap(69, 69, 69))
                                            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                                                .addComponent(jButton4)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                                        .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                                                .addComponent(jLabelarti, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton5))
                                            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                                                .addGap(8, 8, 8)
                                                .addComponent(jLabel6)))
                                        .addContainerGap(53, Short.MAX_VALUE))))))))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabelhuruf)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabelarti)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLayeredPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addGap(49, 49, 49)
                        .addComponent(jButton3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLayeredPane2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void masukanpathwebcam(){
        path = "webcam.png";
        
               webcam = true;
               jLabel1.setIcon(ResizeImagePath(path));
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
          JFileChooser file = new JFileChooser();
 //         file.setCurrentDirectory(new File(System.getProperty("user.home")));
          file.setCurrentDirectory(new File("C:\\Users\\Robert\\Documents\\NetBeansProjects\\ChineseExtraction\\DataUji"));
          //filter the files
          FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg","gif","png");
          file.addChoosableFileFilter(filter);
          int result = file.showSaveDialog(null);
           //if the user click on save in Jfilechooser
          if(result == JFileChooser.APPROVE_OPTION){
              File selectedFile = file.getSelectedFile();
              path = selectedFile.getAbsolutePath();
              namaawal = selectedFile.getName();webcam = false;
              jLabel1.setIcon(ResizeImagePath(path));
          }else if(result == JFileChooser.CANCEL_OPTION){
              System.out.println("File ga ketemu");
          }
          
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        SimpleVideo2 halaman2 = new SimpleVideo2();
        halaman2.setVisible(true);
        this.setVisible(false);
 
        //this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        //----------------------------------------------------------------------------------------------------------------------------------------------------------------webcam=false
        try{   //----------------------------------------------------------------------------------------------------------------------------------------------------------------------webcam=true
            
              //Binerisasi-------------------------------------------------------------------------------------1a
              
              System.loadLibrary( Core.NATIVE_LIBRARY_NAME );
              
              File dir = new File("terolah");
              for(File file: dir.listFiles()){ 
                if (!file.isDirectory()){ 
                    file.delete();}}
         Mat source = Imgcodecs.imread(path,  Imgcodecs.CV_LOAD_IMAGE_GRAYSCALE);
         double x , y, total;
         double batas = 1.6;
         x = source.height();
         y = source.width();
         total = y/x;
         if(total>=batas){
         
             Rect roi = new Rect(0, 0, source.width()/2, source.height());
             Rect roi2 = new Rect(source.width()/2, 0, source.width()/2, source.height());
         
            terbelah2[0] = new Mat(source, roi);
            terbelah2[1] = new Mat(source,roi2);
            akhir = "";
            akhirarti="";
            //Mat phase1 = new Mat(source.rows(),source.cols(),source.type());
         for(int belah = 0 ; belah<terbelah2.length;belah++){
        // phase1 = source;
        Imgproc.threshold(terbelah2[belah],terbelah2[belah],211,255,Imgproc.THRESH_BINARY);
         Imgcodecs.imwrite("terolah/fase1.jpg", terbelah2[belah]);
        // fase1.setIcon(ResizeImagePathProses("terolah/fase1.jpg"));
        
         //End Binerisasi---------------------------------------------------------------------------------------1b
        
      
         
         
         //Canny------------------------------------------------------------------------------------------------2a
         Mat phase2 = new Mat();
         Imgproc.Canny(terbelah2[belah], phase2, 300, 600, 3, true);
         Imgcodecs.imwrite("terolah/fase2.jpg", phase2);
       //  fase2.setIcon(ResizeImagePathProses("terolah/fase2.jpg"));
         
         //End Canny--------------------------------------------------------------------------------------------2b
         //Dilasi-----------------------------------------------------------------------------------------------3a
         Mat phase3 = new Mat();
         double dilation_size = 2.5;
          Mat element1 = Imgproc.getStructuringElement(Imgproc.MORPH_RECT, new Size(2*dilation_size + 1, 2*dilation_size+1));
         Imgproc.dilate(phase2, phase3, element1);
         Imgcodecs.imwrite("terolah/fase3.jpg", phase3);
       //  fase3.setIcon(ResizeImagePathProses("terolah/fase3.jpg"));
         
//Dilasi-----------------------------------------------------------------------------------------------3b
        //Slicing-----------------------------------------------------------------------------------------------4a
              int tl,tr,bl,br;
              int atas,bawah,kiri,kanan;
              BufferedImage barulagi = bufferedImage(phase3);
              int lebarpotongan = loopkanan(barulagi) - loopkiri(barulagi);
              int tinggipotongan = loopbawah(barulagi) - loopatas(barulagi);
              BufferedImage tulisanaja = barulagi.getSubimage(loopkiri(barulagi), loopatas(barulagi),lebarpotongan , tinggipotongan);
           
              File outputfile = new File("image.jpg");
              ImageIO.write(tulisanaja, "jpg", outputfile);
              
//Thread.sleep(10000);
              Mat phase4 = Imgcodecs.imread("image.jpg");
              
              Imgcodecs.imwrite("terolah/fase4.jpg", phase4);
       //  fase4.setIcon(ResizeImagePathProses("terolah/fase4.jpg"));
             
//End Slicing ------------------------------------------------------------------------------------4b
              //Start Fill Holes -----------------------------------------------------------------------------------------
              Mat phase42 = new Mat();
              
              phase42 = FillHoles(phase4);
              Imgcodecs.imwrite(namaawal, phase42);
         //     fase5.setIcon(ResizeImagePathProses(namaawal));
              Mat phase5 = new Mat();
              Core.bitwise_not(phase42, phase5);
              //End Fill Holes
              //Template Matching ------------------------------------------------------------------------------5a
//             TrueTemplateMatching korelaasi = new TrueTemplateMatching();
//             double r = korelaasi.hitungKorelasi(phase5, phase5);
//             System.out.println(r);
                
               reader3 faseakhir1 = new reader3();
               reader5 faseakhir2 = new reader5();
               reader7 faseakhir3 = new reader7();
               TemplateMatching gorez = new TemplateMatching();
               
               int jumgorez = 0;
               jumgorez = gorez.hitungGoresan(phase5);
               setghores(jumgorez);
               
               System.out.println("jumlah goresan bulat = "+jumgorez);
               if(jumgorez==3){
                   akhir = akhir +" "+ faseakhir1.olahtemplate(phase5,jumgorez);
                   akhirarti = akhirarti+" "+faseakhir1.getArti();
                   jTextArea2.setText(faseakhir1.getAllkorelasi3());
               }else if(jumgorez==5){
                   akhir =akhir +" "+  faseakhir2.olahtemplate(phase5,jumgorez);
                   akhirarti = akhirarti+" "+faseakhir2.getArti();
                   jTextArea2.setText(faseakhir2.getAllkorelasi5());
               }else{
                   akhir =akhir +" "+  faseakhir3.olahtemplate(phase5,jumgorez);
                   akhirarti = akhirarti+" "+faseakhir3.getArti();
                   jTextArea2.setText(faseakhir3.getAllkorelasi7());
               }      jLabelhuruf.setText(akhir);
               System.out.println(akhir);
               jLabelarti.setText(akhirarti);
                System.out.println(akhir+" dan "+akhirarti);
              try {
                  ImageIO.write(tulisanaja, "jpg", outputfile);
              } catch (IOException ex) {
                  Logger.getLogger(BrowseImagesTesting.class.getName()).log(Level.SEVERE, null, ex);
              }    
         }
         }else{
         Mat phase1 = new Mat(source.rows(),source.cols(),source.type());
         Imgcodecs.imwrite("terolah/fase0.jpg", source);
        // phase1 = source;
        Imgproc.threshold(source,phase1,211,255,Imgproc.THRESH_BINARY);
         Imgcodecs.imwrite("terolah/fase1.jpg", phase1);
      //   fase1.setIcon(ResizeImagePathProses("terolah/fase1.jpg"));
         
         //End Binerisasi---------------------------------------------------------------------------------------1b
        
      
         
         
         //Canny------------------------------------------------------------------------------------------------2a
         Mat phase2 = new Mat();
         Imgproc.Canny(phase1, phase2, 300, 600, 3, true);
         Imgcodecs.imwrite("terolah/fase2.jpg", phase2);
       //  fase2.setIcon(ResizeImagePathProses("terolah/fase2.jpg"));
         
         //End Canny--------------------------------------------------------------------------------------------2b
         //Dilasi-----------------------------------------------------------------------------------------------3a
         Mat phase3 = new Mat();
         double dilation_size = 2.5;
          Mat element1 = Imgproc.getStructuringElement(Imgproc.MORPH_RECT, new Size(2*dilation_size + 1, 2*dilation_size+1));
         Imgproc.dilate(phase2, phase3, element1);
         Imgcodecs.imwrite("terolah/fase3.jpg", phase3);
       //  fase3.setIcon(ResizeImagePathProses("terolah/fase3.jpg"));
         
//Dilasi-----------------------------------------------------------------------------------------------3b
        //Slicing-----------------------------------------------------------------------------------------------4a
           int tl,tr,bl,br;
           int atas,bawah,kiri,kanan;
//              System.out.println(phase3.cols()+" x "+phase3.rows() );
              //Imgcodecs.imwrite("untukwarna.jpg",phase3);
          
          BufferedImage barulagi = bufferedImage(phase3);
//          barulagi = convertToARGB(barulagi);
//          Color mycolor = new Color(barulagi.getRGB(1, 1));
//          int warnalatar = mycolor.getAlpha();
              
//              System.out.println("Kiri = "+loopkiri(barulagi));
//              System.out.println("Kanan = "+loopkanan(barulagi));
//              System.out.println("Atas = "+loopatas(barulagi));
//              System.out.println("Bawah = "+loopbawah(barulagi));
              int lebarpotongan = loopkanan(barulagi) - loopkiri(barulagi);
              int tinggipotongan = loopbawah(barulagi) - loopatas(barulagi);
              BufferedImage tulisanaja = barulagi.getSubimage(loopkiri(barulagi), loopatas(barulagi),lebarpotongan , tinggipotongan);
              
              File outputfile = new File("image.jpg");
              ImageIO.write(tulisanaja, "jpg", outputfile);
              
//Thread.sleep(10000);
              Mat phase4 = Imgcodecs.imread("image.jpg");
              
              Imgcodecs.imwrite("terolah/fase4.jpg", phase4);
     //    fase4.setIcon(ResizeImagePathProses("terolah/fase4.jpg"));
             
//End Slicing ------------------------------------------------------------------------------------4b
              //Start Fill Holes -----------------------------------------------------------------------------------------
              Mat phase42 = new Mat();
              
              phase42 = FillHoles(phase4);
              Imgcodecs.imwrite(namaawal, phase42);
           //   fase5.setIcon(ResizeImagePathProses(namaawal));
           Imgcodecs.imwrite("terolah/fase5.jpg", phase42);
              Mat phase5 = new Mat();
              Core.bitwise_not(phase42, phase5);
              //End Fill Holes
              //Template Matching ------------------------------------------------------------------------------5a
//             TrueTemplateMatching korelaasi = new TrueTemplateMatching();
//             double r = korelaasi.hitungKorelasi(phase5, phase5);
//             System.out.println(r);
                Imgcodecs.imwrite("terolah/fase6.jpg", phase5);
               reader3 faseakhir1 = new reader3();
               reader5 faseakhir2 = new reader5();
               reader7 faseakhir3 = new reader7();
               TemplateMatching gorez = new TemplateMatching();
               
               int jumgorez = 0;
               jumgorez = gorez.hitungGoresan(phase5);
               setghores(jumgorez);
               String akhir = "";
               String akhirarti="";
               System.out.println("jumlah goresan bulat = "+jumgorez);
               if(jumgorez==3){
                   akhir = faseakhir1.olahtemplate(phase5,jumgorez);
                   akhirarti = faseakhir1.getArti();
                   jTextArea2.setText(faseakhir1.getAllkorelasi3());
                   
               }else if(jumgorez==5){
                   akhir = faseakhir2.olahtemplate(phase5,jumgorez);
                   akhirarti = faseakhir2.getArti();
                   jTextArea2.setText(faseakhir2.getAllkorelasi5());
               }else{
                   akhir = faseakhir3.olahtemplate(phase5,jumgorez);
                   akhirarti = faseakhir3.getArti();
                   jTextArea2.setText(faseakhir3.getAllkorelasi7());
               }
               
//               while(akhir==null){
//                   System.out.println("loop");
//                   if(jumgorez == 3){
//                       jumgorez = 5;
//                   }else if(jumgorez == 5){
//                       jumgorez = 7;
//                   }else{
//                       jumgorez = 3;
//                   }
//                   akhir = faseakhir.olahtemplate(phase5,jumgorez);
//                   //Imgcodecs.imwrite("fase5.jpg", phase5);
//            
//                      akhirarti = faseakhir.getArti(); 
//               }
//               
                  
               
               jLabelhuruf.setText(akhir);
               System.out.println(akhir);
               jLabelarti.setText(akhirarti);
                System.out.println(akhir+" dan "+akhirarti);
              try {
                  ImageIO.write(tulisanaja, "jpg", outputfile);
              } catch (IOException ex) {
                  Logger.getLogger(BrowseImagesTesting.class.getName()).log(Level.SEVERE, null, ex);
              } 
         }
        }catch(Exception e){
            System.out.println("Silahkan pilih gambar terlebih dahulu!");
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        StringSelection stringSelection = new StringSelection(jLabelhuruf.getText().toString());
Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
clpbrd.setContents(stringSelection, null);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        StringSelection stringSelection = new StringSelection(jLabelarti.getText().toString());
Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
clpbrd.setContents(stringSelection, null);
    }//GEN-LAST:event_jButton5ActionPerformed
    
    private Mat addTo(Mat matA, Mat matB) {
    Mat m = new Mat(matA.rows(), matA.cols() +  matB.cols(), matA.type());
    int aCols = matA.cols();
    int aRows = matA.rows();
    for (int i = 0; i < aRows; i++) {
        for (int j = 0; j < aCols; j++) {
            m.put(i, j, matA.get(i, j));
        }
    }
    for (int i = 0; i < matB.rows(); i++) {
        for (int j = 0; j < matB.cols(); j++) {
            m.put(i, aCols + j, matB.get(i, j));
        }
    }
    return m;
}
    
    
    public static void jadiAbu(String filemasuk,String filekeluar) throws IOException{
        System.loadLibrary( Core.NATIVE_LIBRARY_NAME );
         File input = new File(filemasuk);
         BufferedImage image = ImageIO.read(input);	

         byte[] data = ((DataBufferByte) image.getRaster().getDataBuffer()).getData();
         Mat mat = new Mat(image.getHeight(), image.getWidth(), CvType.CV_8UC3);
         mat.put(0, 0, data);

         Mat mat1 = new Mat(image.getHeight(),image.getWidth(),CvType.CV_8UC1);
         Imgproc.cvtColor(mat, mat1, Imgproc.COLOR_RGB2GRAY);

         byte[] data1 = new byte[mat1.rows() * mat1.cols() * (int)(mat1.elemSize())];
         mat1.get(0, 0, data1);
         BufferedImage image1 = new BufferedImage(mat1.cols(),mat1.rows(), BufferedImage.TYPE_BYTE_GRAY);
         image1.getRaster().setDataElements(0, 0, mat1.cols(), mat1.rows(), data1);

         File ouptut = new File(filekeluar);
         ImageIO.write(image1, "jpg", ouptut);
    }
    public static void denoise(String imgInPath, String imgOutPath) { 
    Mat image = Imgcodecs.imread(imgInPath);
    Mat out = new Mat();
    Mat tmp = new Mat();
    Mat kernel = new Mat(new Size(3, 3), CvType.CV_8UC1, new Scalar(255));
    Imgproc.morphologyEx(image, tmp, Imgproc.MORPH_OPEN, kernel);
    Imgproc.morphologyEx(tmp, out, Imgproc.MORPH_CLOSE, kernel);
    Imgcodecs.imwrite(imgOutPath, out);
    }
    public static BufferedImage convertToARGB(BufferedImage image)
{
    BufferedImage newImage = new BufferedImage(
        image.getWidth(), image.getHeight(),
        BufferedImage.TYPE_INT_ARGB);
    Graphics2D g = newImage.createGraphics();
    g.drawImage(image, 0, 0, null);
    g.dispose();
    return newImage;
}
    public static Mat bufferedImageToMat(BufferedImage bi) {
  Mat mat = new Mat(bi.getHeight(), bi.getWidth(), CvType.CV_8UC3);
  byte[] data = ((DataBufferByte) bi.getRaster().getDataBuffer()).getData();
  mat.put(0, 0, data);
  return mat;
}
    public static int loopatas(BufferedImage barulagi){

              int lebar = barulagi.getWidth()-1;
              int tinggi = barulagi.getHeight()-1;
              int atas=0;
              loopnich:    
          for (int i=0; i < tinggi;i++){
              for (int j=0; j < lebar;j++){
                  int warnasekarang = barulagi.getRGB(j, i);
                    
              
                if((warnasekarang & 0x00FFFFFF) != 0){
                     atas = i;
                    break loopnich;
                    
                }
              }
          
          }
           return atas;
    }
     private BufferedImage cropImage(BufferedImage src, Rectangle rect) {
      BufferedImage dest = src.getSubimage(rect.x, rect.y, rect.width, rect.height);
      return dest; 
   }
    public static int loopbawah(BufferedImage barulagi){

              int lebar = barulagi.getWidth()-1;
              int tinggi = barulagi.getHeight()-1;
              int bawah=0;
              loopnich:    
          for (int i=tinggi; i>0;i--){
              
              for (int j=lebar; j > 0;j--){
                int warnasekarang = barulagi.getRGB(j, i);
   
              
                if((warnasekarang & 0x00FFFFFF) != 0){
                     bawah = i;
                    break loopnich;
                    
                }
              }
          
          }
           return bawah;
    }
    public static int loopkiri(BufferedImage barulagi){

              int lebar = barulagi.getWidth()-1;
              int tinggi = barulagi.getHeight()-1;
              int kiri=0;
              loopnich:    
          for (int i=0; i < lebar;i++){
              
              for (int j=0; j < tinggi;j++){
                int warnasekarang = barulagi.getRGB(i, j);
   
              
                if((warnasekarang & 0x00FFFFFF) != 0){
                     kiri = i;
                    break loopnich;
                }
              }
          }
           return kiri;
    }

    public static int loopkanan(BufferedImage barulagi){

              int lebar = barulagi.getWidth()-1;
              int tinggi = barulagi.getHeight()-1;
              int kanan=0;
              loopnich:    
          for (int i=lebar; i > 0;i--){
              
              for (int j=0; j < tinggi;j++){
                int warnasekarang = barulagi.getRGB(i, j);
   
              
                if((warnasekarang & 0x00FFFFFF) != 0){
                     kanan = i;
                    break loopnich;
                    
                }
              }
          
          }
           return kanan;
    }
    public static Mat FillHoles(Mat input){
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        Mat erosi = new Mat();
        erosi = input;
        Mat erosion = new Mat();
        int morph_elem = 0;
        int morph_size = 1;
        
       
        Mat element = Imgproc.getStructuringElement( morph_elem, new Size( 2*morph_size + 1, 2*morph_size+1 ), new Point( morph_size, morph_size ) );
        int operation = 3;
        Imgproc.morphologyEx( erosi, erosion, operation, element );
        
        return erosion;
    }
    public ImageIcon ResizeImagePath(String ImagePath)
    {
        ImageIcon MyImage = new ImageIcon(ImagePath);
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(jLabel1.getWidth()+12, jLabel1.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }
//    public ImageIcon ResizeImagePathProses(String ImagePath)
//    {
//        ImageIcon MyImage = new ImageIcon(ImagePath);
//        Image img = MyImage.getImage();
//   //     Image newImg = img.getScaledInstance(fase1.getWidth()+12, fase1.getHeight(), Image.SCALE_SMOOTH);
//      //  ImageIcon image = new ImageIcon(newImg);
//        return image;
//    }
  public ImageIcon ResizeImageImg(Image ImageNe)
    {
        
        
        Image newImg = ImageNe.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }
  public static BufferedImage bufferedImage(Mat m) {
    int type = BufferedImage.TYPE_BYTE_GRAY;
    if ( m.channels() > 1 ) {
        type = BufferedImage.TYPE_3BYTE_BGR;
    }
    BufferedImage image = new BufferedImage(m.cols(),m.rows(), type);
    m.get(0,0,((DataBufferByte)image.getRaster().getDataBuffer()).getData()); // get all the pixels
    return image;
}
  
  
public static Mat matchTemplate(String inFile, String templateFile,String outFile, int match_method) {

              System.loadLibrary( Core.NATIVE_LIBRARY_NAME );
    Mat img = Imgcodecs.imread(inFile);
    Mat templ = Imgcodecs.imread(templateFile);

    // / Create the result matrix
    int result_cols = img.cols() - templ.cols() + 1;
    int result_rows = img.rows() - templ.rows() + 1;
    Mat result = new Mat(result_rows, result_cols, CvType.CV_32FC1);

//  Bitmap inFileBitmap = BitmapFactory.decodeFile(inFile);
//  Bitmap templBitmap = BitmapFactory.decodeFile(templateFile);
    // / Do the Matching and Normalize
    //Utils.bitmapToMat(inFileBitmap, img);
    //Utils.bitmapToMat(templBitmap, templ);
    Imgproc.matchTemplate(img, templ, result, match_method);
    Core.normalize(result, result, 0, 1, Core.NORM_MINMAX, -1, new Mat());

    // / Localizing the best match with minMaxLoc

    Core.MinMaxLocResult mmr = Core.minMaxLoc(result);

    Point matchLoc;
    double minVal; double maxVal;
    if (match_method == Imgproc.TM_SQDIFF
            || match_method == Imgproc.TM_SQDIFF_NORMED) {
        matchLoc = mmr.minLoc;
    } else {
        matchLoc = mmr.maxLoc;
    }



    // / Show me what you got
    Imgproc.rectangle(img, matchLoc, new Point(matchLoc.x + templ.cols(),matchLoc.y + templ.rows()), new Scalar(0, 0,0));

    // Save the visualized detection.

    Imgcodecs.imwrite(outFile, img);
    return img;
}    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BrowseImagesTesting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BrowseImagesTesting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BrowseImagesTesting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BrowseImagesTesting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
                new BrowseImagesTesting().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelarti;
    private javax.swing.JLabel jLabelhuruf;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
